clLongOpt	cligen/argcvt.html#clLongOpt	ClHelpContext.clLongOpt	
clSubCmd	cligen/argcvt.html#clSubCmd	ClHelpContext.clSubCmd	
clEnumVal	cligen/argcvt.html#clEnumVal	ClHelpContext.clEnumVal	
ClHelpContext	cligen/argcvt.html#ClHelpContext	argcvt: ClHelpContext	
helpCase	cligen/argcvt.html#helpCase,string,ClHelpContext	argcvt: helpCase(inp: string; context: ClHelpContext = clSubCmd): string	
nimEscape	cligen/argcvt.html#nimEscape,string,char	argcvt: nimEscape(s: string; quote = &apos;\&quot;&apos;): string	
unescape	cligen/argcvt.html#unescape,string	argcvt: unescape(s: string): string	
ElementError	cligen/argcvt.html#ElementError	argcvt: ElementError	
ArgcvtParams	cligen/argcvt.html#ArgcvtParams	argcvt: ArgcvtParams	
argKeys	cligen/argcvt.html#argKeys,ArgcvtParams,string	argcvt: argKeys(a: ArgcvtParams; argSep = &quot;=&quot;): string	
argDf	cligen/argcvt.html#argDf,ArgcvtParams,string	argcvt: argDf(a: ArgcvtParams; dv: string): string	
argParse	cligen/argcvt.html#argParse,bool,bool,ArgcvtParams	argcvt: argParse(dst: var bool; dfl: bool; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,bool,ArgcvtParams	argcvt: argHelp(dfl: bool; a: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,cstring,cstring,ArgcvtParams	argcvt: argParse(dst: var cstring; dfl: cstring; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,cstring,ArgcvtParams	argcvt: argHelp(dfl: cstring; a: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,char,char,ArgcvtParams	argcvt: argParse(dst: var char; dfl: char; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,char,ArgcvtParams	argcvt: argHelp(dfl: char; a: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,T,T,ArgcvtParams	argcvt: argParse[T: enum](dst: var T; dfl: T; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,T,ArgcvtParams	argcvt: argHelp[T: enum](dfl: T; a: var ArgcvtParams): seq[string]	
low	cligen/argcvt.html#low,typedesc[T]	argcvt: low[T: uint | uint64](x: typedesc[T]): T	
high	cligen/argcvt.html#high,typedesc[T]	argcvt: high[T: uint | uint64](x: typedesc[T]): T	
argParseHelpNum	cligen/argcvt.html#argParseHelpNum.t,untyped,untyped,untyped	argcvt: argParseHelpNum(WideT: untyped; parse: untyped; T: untyped): untyped	
argParse	cligen/argcvt.html#argParse,int,int,ArgcvtParams	argcvt: argParse(dst`gensym17405183: var int; dfl`gensym17405184: int;\n         a`gensym17405185: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,int,ArgcvtParams	argcvt: argHelp(dfl`gensym17405188: int; a`gensym17405189: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,int8,int8,ArgcvtParams	argcvt: argParse(dst`gensym17420084: var int8; dfl`gensym17420085: int8;\n         a`gensym17420086: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,int8,ArgcvtParams	argcvt: argHelp(dfl`gensym17420089: int8; a`gensym17420090: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,int16,int16,ArgcvtParams	argcvt: argParse(dst`gensym17435064: var int16; dfl`gensym17435065: int16;\n         a`gensym17435066: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,int16,ArgcvtParams	argcvt: argHelp(dfl`gensym17435069: int16; a`gensym17435070: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,int32,int32,ArgcvtParams	argcvt: argParse(dst`gensym17450064: var int32; dfl`gensym17450065: int32;\n         a`gensym17450066: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,int32,ArgcvtParams	argcvt: argHelp(dfl`gensym17450069: int32; a`gensym17450070: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,int64,int64,ArgcvtParams	argcvt: argParse(dst`gensym17465064: var int64; dfl`gensym17465065: int64;\n         a`gensym17465066: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,int64,ArgcvtParams	argcvt: argHelp(dfl`gensym17465069: int64; a`gensym17465070: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,uint,uint,ArgcvtParams	argcvt: argParse(dst`gensym17480064: var uint; dfl`gensym17480065: uint;\n         a`gensym17480066: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,uint,ArgcvtParams	argcvt: argHelp(dfl`gensym17480069: uint; a`gensym17480070: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,uint8,uint8,ArgcvtParams	argcvt: argParse(dst`gensym17495077: var uint8; dfl`gensym17495078: uint8;\n         a`gensym17495079: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,uint8,ArgcvtParams	argcvt: argHelp(dfl`gensym17495082: uint8; a`gensym17495083: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,uint16,uint16,ArgcvtParams	argcvt: argParse(dst`gensym17510064: var uint16; dfl`gensym17510065: uint16;\n         a`gensym17510066: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,uint16,ArgcvtParams	argcvt: argHelp(dfl`gensym17510069: uint16; a`gensym17510070: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,uint32,uint32,ArgcvtParams	argcvt: argParse(dst`gensym17525064: var uint32; dfl`gensym17525065: uint32;\n         a`gensym17525066: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,uint32,ArgcvtParams	argcvt: argHelp(dfl`gensym17525069: uint32; a`gensym17525070: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,uint64,uint64,ArgcvtParams	argcvt: argParse(dst`gensym17540064: var uint64; dfl`gensym17540065: uint64;\n         a`gensym17540066: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,uint64,ArgcvtParams	argcvt: argHelp(dfl`gensym17540069: uint64; a`gensym17540070: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,float32,float32,ArgcvtParams	argcvt: argParse(dst`gensym17555077: var float32; dfl`gensym17555078: float32;\n         a`gensym17555079: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,float32,ArgcvtParams	argcvt: argHelp(dfl`gensym17555082: float32; a`gensym17555083: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,float,float,ArgcvtParams	argcvt: argParse(dst`gensym17570076: var float; dfl`gensym17570077: float;\n         a`gensym17570078: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,float,ArgcvtParams	argcvt: argHelp(dfl`gensym17570081: float; a`gensym17570082: var ArgcvtParams): seq[string]	
PARSING AGGREGATES (set,seq,..)	cligen/argcvt.html#parsing-aggregates-set-seq-dotdot	 PARSING AGGREGATES (set,seq,..)	
argAggSplit	cligen/argcvt.html#argAggSplit,ArgcvtParams	argcvt: argAggSplit[T](a: var ArgcvtParams; split = true): seq[T]	
getDescription	cligen/argcvt.html#getDescription,T,string,string	argcvt: getDescription[T](defVal: T; parNm: string; defaultHelp: string): string	
plural	cligen/argcvt.html#plural,string	argcvt: plural(word: string): string	
argAggHelp	cligen/argcvt.html#argAggHelp,seq[string],string,string,string	argcvt: argAggHelp(dfls: seq[string]; aggTyp: string; typ, dfl: var string)	
argParse	cligen/argcvt.html#argParse,seq[T],seq[T],ArgcvtParams	argcvt: argParse[T](dst: var seq[T]; dfl: seq[T]; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,seq[T],ArgcvtParams	argcvt: argHelp[T](dfl: seq[T]; a: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,string,string,ArgcvtParams	argcvt: argParse(dst: var string; dfl: string; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,string,ArgcvtParams	argcvt: argHelp(dfl: string; a: var ArgcvtParams): seq[string]	
incl	cligen/argcvt.html#incl,set[T],openArray[T]	argcvt: incl[T](dst: var set[T]; toIncl: openArray[T])	
excl	cligen/argcvt.html#excl,set[T],openArray[T]	argcvt: excl[T](dst: var set[T]; toExcl: openArray[T])	
argParse	cligen/argcvt.html#argParse,set[T],set[T],ArgcvtParams	argcvt: argParse[T](dst: var set[T]; dfl: set[T]; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,set[T],ArgcvtParams	argcvt: argHelp[T](dfl: set[T]; a: var ArgcvtParams): seq[string]	
argParse	cligen/argcvt.html#argParse,HashSet[T],HashSet[T],ArgcvtParams	argcvt: argParse[T](dst: var HashSet[T]; dfl: HashSet[T]; a: var ArgcvtParams): bool	
argHelp	cligen/argcvt.html#argHelp,HashSet[T],ArgcvtParams	argcvt: argHelp[T](dfl: HashSet[T]; a: var ArgcvtParams): seq[string]	
